{"ast":null,"code":"import _classCallCheck from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MyWorkspace\\\\burger-builder\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport axios from './../../../axios-orders';\nimport Button from './../../../components//UI/Button/Button';\nimport classes from './ContactData.css';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport Input from './../../../components/UI/Input/Input';\n\nvar ContactData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your name'\n          },\n          value: ''\n        },\n        city: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'street'\n          },\n          value: ''\n        },\n        Country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Email'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'normal',\n              displayValue: 'Normal'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      }); // alert('you continue!');\n\n\n      var order = {\n        ingredients: _this.props.ingredients,\n        price: _this.props.totalPrice\n      };\n      console.log(order);\n      axios.post('/orders.json', order).then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"render\",\n    value: function render() {\n      var formElementsArray = [];\n\n      for (var key in this.state.order) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputtype: \"input\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"ORDER\"));\n\n      if (this.state.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Enter your contact data:\"), form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["D:\\MyWorkspace\\burger-builder\\src\\containers\\Checkout\\ContactData\\ContactData.js"],"names":["React","Component","axios","Button","classes","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","city","Country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","price","totalPrice","console","log","post","then","response","history","push","catch","error","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport axios from './../../../axios-orders';\r\n\r\nimport Button from './../../../components//UI/Button/Button';\r\nimport classes from './ContactData.css';\r\nimport Spinner from './../../../components/UI/Spinner/Spinner';\r\nimport Input from './../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your name'\r\n        },\r\n        value: ''\r\n      },\r\n      city: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'street'\r\n        },\r\n        value: ''\r\n      },\r\n      Country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Country'\r\n        },\r\n        value: ''\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: ''\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest'},\r\n            { value: 'normal', displayValue: 'Normal'}\r\n          ]\r\n        },\r\n        value: ''\r\n      }\r\n    },\r\n    loading: false\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    // alert('you continue!');\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n    }\r\n\r\n    console.log(order);\r\n    axios.post('/orders.json', order)\r\n          .then(response => {\r\n            console.log(response);\r\n            this.setState({ loading: false});\r\n            this.props.history.push('/');\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.setState({ loading: false });\r\n          });\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n\r\n    for(let key in this.state.order) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (<form>\r\n      <Input inputtype=\"input\" type=\"text\" name=\"name\" placeholder=\"Your Name\"/>\r\n      {formElementsArray.map(formElement => (\r\n        <Input\r\n          elementType={ formElement.config.elementType }\r\n          elementConfig={ formElement.config.elementConfig }\r\n          value={ formElement.config.value }\r\n        />\r\n      ))}\r\n      <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n    </form>);\r\n    if (this.state.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return(\r\n      <div className= {classes.ContactData}>\r\n        <h4>\r\n          Enter your contact data:\r\n        </h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}