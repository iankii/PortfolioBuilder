{"ast":null,"code":"import _objectSpread from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MyWorkspace\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MyWorkspace\\\\burger-builder\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from './../../../axios-orders';\nimport Button from './../../../components//UI/Button/Button';\nimport classes from './ContactData.css';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport Input from './../../../components/UI/Input/Input';\n\nvar ContactData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your name'\n          },\n          value: ''\n        },\n        city: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'street'\n          },\n          value: ''\n        },\n        Country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Email'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'normal',\n              displayValue: 'Normal'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      }); // alert('you continue!');\n\n\n      var order = {\n        ingredients: _this.props.ings,\n        price: _this.props.price\n      };\n      console.log(order);\n      axios.post('/orders.json', order).then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updatedOrderForm = _objectSpread({}, _this.state.orderForm);\n\n      var updatedFormElement = _objectSpread({}, updatedOrderForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n      _this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"ORDER\"));\n\n      if (this.state.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Enter your contact data:\"), form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(ContactData);","map":{"version":3,"sources":["D:\\MyWorkspace\\burger-builder\\src\\containers\\Checkout\\ContactData\\ContactData.js"],"names":["React","Component","connect","axios","Button","classes","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","city","Country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","ings","price","console","log","post","then","response","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","key","id","config","form","map","formElement","mapStateToProps","ownProps","totalPrice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from './../../../axios-orders';\r\n\r\nimport Button from './../../../components//UI/Button/Button';\r\nimport classes from './ContactData.css';\r\nimport Spinner from './../../../components/UI/Spinner/Spinner';\r\nimport Input from './../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your name'\r\n        },\r\n        value: ''\r\n      },\r\n      city: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'street'\r\n        },\r\n        value: ''\r\n      },\r\n      Country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Country'\r\n        },\r\n        value: ''\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: ''\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest'},\r\n            { value: 'normal', displayValue: 'Normal'}\r\n          ]\r\n        },\r\n        value: ''\r\n      }\r\n    },\r\n    loading: false\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    // alert('you continue!');\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n    }\r\n\r\n    console.log(order);\r\n    axios.post('/orders.json', order)\r\n          .then(response => {\r\n            console.log(response);\r\n            this.setState({ loading: false});\r\n            this.props.history.push('/');\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.setState({ loading: false });\r\n          });\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm\r\n    }\r\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    this.setState({ orderForm: updatedOrderForm });\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n\r\n    for(let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={ formElement.config.elementType }\r\n            elementConfig={ formElement.config.elementConfig }\r\n            value={ formElement.config.value }\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n      </form>\r\n    );\r\n\r\n    if (this.state.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return(\r\n      <div className= {classes.ContactData}>\r\n        <h4>\r\n          Enter your contact data:\r\n        </h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ings: state.ingredients,\r\n    price: state.totalPrice\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactData);"]},"metadata":{},"sourceType":"module"}